// Generated by CoffeeScript 1.6.3
(function() {
  var generate_png, indexData, order_by, parse_details, parse_details_2, parse_works;

  parse_details = function(spec, data) {
    return vg.parse.spec(spec, function(chart) {
      var view;
      return view = chart({
        el: "#vis_details",
        data: data,
        renderer: "svg"
      }).on("mouseover", function(event, item) {
        if (item.mark.marktype !== "rect") {
          return;
        }
        return view.update({
          props: "hover",
          items: item
        });
      }).on("mouseout", function(event, item) {
        if (item.mark.marktype !== "rect") {
          return;
        }
        return view.update({
          props: "update",
          items: item
        });
      }).update();
    });
  };

  parse_details_2 = function(spec) {
    return vg.parse.spec(spec, function(chart) {
      var view;
      return view = chart({
        el: "#vis_details_2",
        renderer: "svg"
      }).on("mouseover", function(event, item) {
        if (item.mark.marktype !== "rect") {
          return;
        }
        return view.update({
          props: "hover",
          items: item
        });
      }).on("mouseout", function(event, item) {
        if (item.mark.marktype !== "rect") {
          return;
        }
        return view.update({
          props: "update",
          items: item
        });
      }).update();
    });
  };

  generate_png = function(spec) {
    var s;
    console.log("Woohoo");
    s = "<img class='inline' src='" + spec + "' />";
    console.log(s);
    return $("#vis_details_3 img").replaceWith(s);
  };

  parse_works = function(spec, data) {
    return vg.parse.spec(spec, function(chart) {
      var view;
      return view = chart({
        el: "#vis_works",
        data: data,
        renderer: "svg"
      }).on("mouseover", function(event, item) {
        if (item.mark.marktype !== "rect") {
          return;
        }
        return view.update({
          props: "hover",
          items: item.cousin(1)
        });
      }).on("mouseout", function(event, item) {
        if (item.mark.marktype !== "rect") {
          return;
        }
        return view.update({
          props: "update",
          items: item.cousin(1),
          duration: 250
        });
      }).on("click", function(event, item) {
        var filters, work_id;
        if (item.mark.marktype !== "rect") {
          return;
        }
        work_id = indexData.table[item.key].work_id;
        console.log("work_id " + work_id);
        filters = [
          {
            "name": "work_id",
            "op": "eq",
            "val": work_id
          }
        ];
        $.ajax({
          url: 'http://localhost:5000/api/paragraph',
          data: {
            "q": JSON.stringify({
              "filters": filters
            })
          },
          dataType: "json",
          contentType: "application/json",
          success: function(data) {
            var d, obj;
            d = (function() {
              var _i, _len, _ref, _results;
              _ref = data.objects;
              _results = [];
              for (_i = 0, _len = _ref.length; _i < _len; _i++) {
                obj = _ref[_i];
                _results.push(obj.word_count);
              }
              return _results;
            })();
            data = {
              table: utils.histogram_(d)
            };
            return parse_details("static/vincent_details.json", data);
          }
        });
        parse_details_2("http://localhost:5000/api/hist/" + work_id + ".json");
        generate_png("http://localhost:5000/api/hist/" + work_id + ".svg");
        return view.update({
          props: "update",
          items: item.cousin(1),
          duration: 250
        });
      }).update();
    });
  };

  indexData = 0;

  order_by = [
    {
      "field": "year",
      "direction": "asc"
    }
  ];

  $.ajax({
    url: 'http://localhost:5000/api/work',
    data: {
      "q": JSON.stringify({
        "order_by": order_by
      })
    },
    dataType: "json",
    contentType: "application/json",
    success: function(data) {
      data = {
        table: data.objects
      };
      parse_works("static/vincent_works.json", data);
      return indexData = data;
    }
  });

}).call(this);
